 <project default="transfer">
 
 	<!-- 
		- Creates a jar file to local directory
		- copies required config (batch_config, log config, rs-folder) and resources from specified folders to new folder
		- creates sym links to specified lib folder and data folder
		
		NOTE
		- 	If the remote destination folder should not contain a data section, adapt the
			property "remote_dir" in task "setRemoteDir"!
		-	Change your username to log in on the remote machine ("user")
		-	You probabliy need to adapt the local directory ("dest_jar_local")
		-   You probabliy need to adapt the remote directory (which normally includes a username): "remote_base_dir"
		
		These contents should be present in $remote_config_file_source: (usually ./<Project>/standard)
		- config/data: shapefiles etc.
		- lib folder at $remote_config_file_source
	 -->
 
 	<property file="../../project.properties"/>
 	
 	<property name="jarFileBuilder" value="TEMPLATE TEMPLATE"/>
 	
 	<property name="dest_jar_local" location="TEMPLATE/TEMPLATE" />
 	
 	<property name="releaseName" value="CRAFTY-TEMPLATE"/>
 	<property name="release_postfix" value="trunk"/>
 	 	
 	<property name="CRAFTY-project" value="TEMPLATE/TEMPLATE"/>
 	<property name="CRAFTY_Parallel-project" value="TEMPLATE/TEMPLATE"/>
 	
 	<property name="local_lib_folder" value="${CRAFTY-project}/lib"/>
 	<property name="local_lib_folder_parallel" value="${CRAFTY_Parallel-project}/lib"/>
 	
 	<!-- values relative to ./ (Project Dir) -->
 	<property name="scriptGenerationScriptFolder" value="./config/cluster/"/>
 	<property name="scenarioDataFolder" value="./data/"/>
 		
 	<!-- value relative to ./config -->
 	<property name="log_config_file" value="../../config/log/log4j_cluster.properties"/>
 	<property name="manifest_file" value="./manifest/META-INF/MANIFEST.MF"/>	
 	 	
 	
 	<property name="user" value="TEMPLATE"/>
 	<property name="remote_base_dir" value="/exports/work/geos_lurg/TEMPLATE"/>
 	<!--property name="remote_base_dir" value="/exports/work/scratch/sholzhau/"/-->
 	<!--property name="remote_base_dir" value="/exports/work/scratch/s/"/-->
 	<property name="remote_host" value="eddie.ecdf.ed.ac.uk"/>
 	
 	<property name="remote_config_file_source" value="${remote_base_dir}/standard"/>
 	<property name="remote_lib_folder_name" value="CRAFTY_lib"/>

 	
 	<target name="setRemoteDir">
 		<tstamp>
 			<format property="DSTAMP" pattern="yyyy-MM-dd_HH-mm" locale="ENGLISH, GERMANY"/>
 		</tstamp>
 		<property name="dest_jar_local" value="${dest_jar_local}/${release}_${DSTAMP}"/>
 		<property name="remote_dir" value="${remote_base_dir}/${release}_${DSTAMP}"/> 
 		
 		<propertyfile file="../../project.properties">
 			<entry  key="lastRemoteDir" value="${remote_dir}"/>
 		</propertyfile> 
 	</target>
    		
 	<target name="copyGenerationScriptFiles">
 		  <copy todir="${dest_jar_local}/python/">
 		  	<fileset id="myfileset2" dir="${basedir}/../../${scriptGenerationScriptFolder}">
 				<include name="**/*.*"/>
 			 </fileset>
 		  </copy>
 	</target>

 	<target name="copyScenarioFiles" depends="make_jar">
 		  <copy todir="${dest_jar_local}/data/">
 		  	<fileset id="myfileset3" dir="${basedir}/../../${scenarioDataFolder}">
 				<include name="**/*.*"/>
 			 </fileset>
 		  </copy>
 	</target>

 	<target name="copyLogConfig" depends="make_jar">
 		  <copy file="${log_config_file}" todir="${dest_jar_local}/config/log/">
 		  </copy>
 	</target>
 		  		
	<target name="make_jar" description="Create JAR archive" depends="">
		<echo>Create jarfile ${dest_jar_local}/${releaseName}.jar...</echo>
		<mkdir dir="${dest_jar_local}"/> 
	    <jar destfile="${dest_jar_local}/${releaseName}.jar"
	    	basedir="${basedir}/../../bin"
	        includes="**/*.class"
	        update="false"
	        compress="true"
	        duplicate="add"
	        manifest="${basedir}/../${manifest_file}">
	       <manifest>
	            <attribute name="Built-By" value="${jarFileBuilder}"/>
	            <attribute name="Implementation-Version"  value="${release}"/>
	            <attribute name="Built-Date" value="${TODAY}"/>
	        </manifest>
	    </jar>
    </target>

 	<taskdef name="logindialog" classname="antlogindialog.PasswordTask" classpath="" />
 	
 	<target name="queryPassword">
		<logindialog message="Login Details: " username="username" defaultusername="${user}" password="passphrase"/>
 	</target>

	<target name="transfer" depends="make_jar, setRemoteDir, copyGenerationScriptFiles, copyScenarioFiles, copyLogConfig, queryPassword">	
		<echo>Copy model files to ... ${remote_host}</echo>
			
		<sshexec host="${remote_host}"
				username="${user}"
				password="${passphrase}"
			  trust="true"
				command="mkdir -p ${remote_dir}/"/>
		
	 	<scp
	       todir="${user}@${remote_host}:${remote_dir}" 
	       password="${passphrase}"
	 	   trust="true"
	 		sftp="true" >
	 		<fileset id="myfileset" dir="${local_dir}">
	 		       		<include name="**/*"/>
	 		</fileset>
	  	</scp>
  	</target>
 	
	<target name="transferClusterScripts" depends="copyGenerationScriptFiles, queryPassword">	
		<echo>Copy cluster scripts to ... ${remote_host}</echo>
			
		<sshexec host="${remote_host}"
				username="${user}"
				password="${passphrase}"
			  trust="true"
				command="mkdir -p ${lastRemoteDir}/python"/>
		
	 	<scp
	       todir="${user}@${remote_host}:${lastRemoteDir}/python" 
	       password="${passphrase}"
	 	   trust="true"
	 		sftp="true" >
	 		<fileset id="myfileset" dir="${local_dir}/python">
	 		       		<include name="**/*"/>
	 		</fileset>
	  	</scp>
  	</target>
	  		
	<target name="transfer_jar" depends="make_jar, queryPassword">	
		<echo>Copy model jar file to ... ${remote_host}</echo>
			
		<sshexec host="${remote_host}"
				username="${user}"
				password="${passphrase}"
			  trust="true"
				command="mkdir -p ${lastRemoteDir}"/>
		
	 	<scp
	       todir="${user}@${remote_host}:${lastRemoteDir}" 
	       password="${passphrase}"
	 	   trust="true"
	 		sftp="true" 
	 		file="${dest_jar_local}/${releaseName}.jar"/>
  	</target>
	  		
	<target name="transfer_data" depends="queryPassword" description="Copy data files to remote server">	
		<echo>Copy data files from ${basedir}/../../${scenarioDataFolder} to ... ${remote_host}:${lastRemoteDir}/data</echo>
		<sshexec host="${remote_host}"
				username="${user}"
				password="${passphrase}"
			  trust="true"
				command="mkdir -p ${lastRemoteDir}/data"/>
	 	<scp
	       todir="${user}@${remote_host}:${lastRemoteDir}/data" 
	       password="${passphrase}"
	 	   trust="true"
	 		sftp="true" >
	 		<fileset id="myfileset" dir="${basedir}/../../${scenarioDataFolder}">
	 		       		<include name="**/*"/>
	 		</fileset>
	  	</scp>
  	</target>
		
	<target name="transfer_standard" depends="queryPassword" description="Copy libs and Co to remote server">	
		<echo>Copy lib files to ... ${remote_host}</echo>
			
		<sshexec host="${remote_host}"
				username="${user}"
				password="${passphrase}"
			  trust="true"
				command="mkdir -p ${remote_config_file_source}/${remote_lib_folder_name}"/>
		
	 	<scp
	       todir="${user}@${remote_host}:${remote_config_file_source}/${remote_lib_folder_name}" 
	       password="${passphrase}"
	 	   trust="true"
	 		sftp="true" >
	 		<fileset id="myfileset" dir="${local_lib_folder}">
	 		       		<include name="**/*"/>
	 		</fileset>
	  	</scp>
  	</target>

	<target name="transfer_crafty" depends="queryPassword" description="Copy crafty lib to remote server">	
		<echo>Copy crafty lib to ... ${remote_host}</echo>
	 	<scp
	       todir="${user}@${remote_host}:${remote_config_file_source}/${remote_lib_folder_name}" 
	       password="${passphrase}"
	 	   trust="true"
	 		sftp="true" 
	 		file="${local_lib_folder}/CRAFTY.jar">
	  	</scp>
  	</target>
  	
  	<target name="transfer_crafty_parallel" depends="queryPassword" description="Copy crafty lib to remote server">	
		<echo>Copy crafty lib to ... ${remote_host}</echo>
	 	<scp
	       todir="${user}@${remote_host}:${remote_config_file_source}/${remote_lib_folder_name}" 
	       password="${passphrase}"
	 	   trust="true"
	 		sftp="true" 
	 		file="${local_lib_folder_parallel}/CRAFTY-P.jar">
	  	</scp>
  	</target>
 	
	<target name="transfer_MoRe" depends="queryPassword" description="Copy MoRe lib to remote server">	
		<echo>Copy crafty lib to ... ${remote_host}</echo>
	 	<scp
	       todir="${user}@${remote_host}:${remote_config_file_source}/${remote_lib_folder_name}" 
	       password="${passphrase}"
	 	   trust="true"
	 		sftp="true" 
	 		file="${local_lib_folder}/MORe.jar">
	  	</scp>
  	</target>
	 		       		
 	<target name="checkLastRemoteDir" unless="lastRemoteDir">
 		<fail message="You need to perform the transfer task once before performing others tasks!"/>
 	</target>
 			
 	<target name="createConfigFileLinks" depends="checkLastRemoteDir, queryPassword" description="Create symlinks to config file source.">
		<sshexec host="${remote_host}"
				username="${user}"
				password="${passphrase}"
			  trust="true"
				command="mkdir ${lastRemoteDir}/config;
						 
					ln -s ${remote_config_file_source}/${remote_lib_folder_name} ${lastRemoteDir}/${remote_lib_folder_name};
				"/>
 	</target>

	<target name="removeLocalFiles">
		<delete dir="${dest_jar_local}/${svn.info.rev}-${DSTAMP}" />
	</target>
 	
 	<!-- probably won't work when you include a timestamp in the dirs -->
 	<target name="cleanUpAll" depends="removeLocalFiles">
 		<sshexec host="${remote_host}"
 			username="${user}"
 			password="${passphrase}"
 			trust="true"
 			command="rm -R ${remote_dir}"/>
 	</target>
</project>